seed: &seed
  239

models:
  decision_tree: !decision_tree
    criterion: "gini"        # 分裂质量的评价标准
    max_depth: null          # 树的最大深度
    min_samples_split: 10    # 内部节点再划分所需最小样本数
    min_samples_leaf: 3      # 叶节点所需的最小样本数
    random_state: *seed      # 控制随机性以便结果可复现

  random_forest: !random_forest
    n_estimators: 50         # 树的数量
    criterion: "gini"        # 分裂质量的评价标准
    max_depth: null          # 树的最大深度
    min_samples_split: 4     # 内部节点再划分所需最小样本数
    min_samples_leaf: 1      # 叶节点所需的最小样本数
    bootstrap: true          # 是否进行bootstrap采样
    random_state: *seed      # 控制随机性以便结果可复现

  xgboost: !xgboost
    n_estimators: 50         # 树的数量
    max_depth: 5             # 树的最大深度
    learning_rate: 0.1       # 学习率
    eval_metric: "logloss"   # 评价指标
    random_state: *seed      # 控制随机性以便结果可复现

  adaboost: !adaboost
    n_estimators: 30         # 弱学习器的数量
    learning_rate: 1.0       # 对每个弱学习器的贡献程度
    random_state: *seed      # 控制随机性以便结果可复现
    estimator: !DecisionTreeClassifier
      max_depth: 7

  svc: !svc
    C: 0.4                   # 正则化参数
    kernel: "rbf"            # 核函数类型
    degree: 3                # 多项式核函数的次数（'poly'时有效）
    gamma: "scale"           # 核系数（对于'rbf', 'poly', 'sigmoid'有效）
    probability: true        # 是否启用概率估计
    random_state: *seed      # 控制随机性以便结果可复现（仅对某些选项有效）

  lightbgm: !lightgbm
    n_estimators: 100        # 树的数量
    max_depth: -1            # 树的最大深度（-1表示没有限制）
    learning_rate: 0.1       # 学习率
    num_leaves: 30           # 一棵树上的叶子数
    random_state: *seed      # 控制随机性以便结果可复现
    verbose: -1              # 不要打印日志

  mlp: !mlp
    hidden_layer_sizes: [256, 128, 64, 32]
    activation: 'relu'             # 激活函数，这里使用ReLU
    solver: 'adam'                 # 权重优化算法，这里使用Adam
    alpha: 0.0001                  # L2惩罚(正则化)参数
    batch_size: 'auto'             # 每次迭代使用的样本数量，'auto'表示根据数据集大小自动设置
    learning_rate_init: 0.001      # 初始学习率，默认值为0.001
    max_iter: 500                  # 最大迭代次数
    shuffle: true                  # 是否在每次迭代前打乱训练数据
    random_state: *seed            # 控制权重初始化的随机种子
    verbose: true                  # 是否输出详细信息
    early_stopping: true           # 是否早停以防止过拟合
    validation_fraction: 0.1       # 早停时使用的验证集比例
